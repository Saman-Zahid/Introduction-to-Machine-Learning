"0","n=dim(spambase)[1]"
"0","set.seed(12345) "
"0","id=sample(1:n, floor(n*0.5)) "
"0","train=spambase[id,]  "
"0","test=spambase[-id,]"
"0","data <- train"
"0","newdata <- test"
"0","knearest=function(data,k,newdata) {"
"0","  "
"0","  n1=dim(data)[1]"
"0","  n2=dim(newdata)[1]"
"0","  p=dim(data)[2]"
"0","  Prob=numeric(n2)"
"0","  X=as.matrix(data[,-p])"
"0","  "
"0","  Y=as.matrix(newdata[,-p])"
"0","  "
"0","  X_hat=X/matrix(sqrt(rowSums(X^2)), nrow=n1, ncol=p-1)"
"0","  "
"0","  Y_hat=Y/matrix(sqrt(rowSums(Y^2)), nrow=n2, ncol=p-1)"
"0","  "
"0","  "
"0","  C <- X_hat %*% t(Y_hat)"
"0","  "
"0","  D <- 1 - C"
"0","  "
"0","  for (i in 1:n2 ){"
"0","    "
"0","    "
"0","    D_i <- as.data.frame(cbind(value=D[,i],spam=data[,p]))"
"0","    "
"0","    N_i <- D_i[order(D_i$value),]"
"0","    "
"0","    Prob[i] <- sum(N_i[1:k,2]) / k"
"0","    "
"0","  }"
"0","  return(Prob)"
"0","}"
"0","prob <- knearest(data,5,newdata)"
"0","Y_pred <- ifelse(prob > 0.5,1,0)"
"0","col_num <- ncol(data)"
"0","c_mat <- table(data[,col_num],Y_pred)"
"0","# misclassification rate"
"0","mis_class <- sum(c_mat[row(c_mat) != col(c_mat)])/ sum(c_mat)"
"0","# Assignnment 1 part 4"
"0","prob <- knearest(data,1,newdata)"
"0","col_num <- ncol(data)"
"0","c_mat <- table(data[,col_num],prob > 0.5)"
"0","# misclassification rate"
"0","mis_class <- sum(c_mat[row(c_mat) != col(c_mat)])/ sum(c_mat)"
"0","# Assignment 1 part 5"
"0","library(kknn)"
"0","kkn <- kknn(Spam~.,data,newdata,k=5)"
"0","probability <- kkn$fitted.values"
"0","Y_pred <- ifelse(probability > 0.5,1,0)"
"0","col_num <- ncol(data)"
"0","# Confusion matrix"
"0","c_mat <- table(data[,col_num],Y_pred)"
"0","# misclassification rate"
"0","mis_class <- sum(c_mat[row(c_mat) != col(c_mat)])/ sum(c_mat)"
"0","# The mis-classification rate obtained from calculated kkn is 0.4664234 "
"0","# and that by using kknn package is 0.470073 which is almost similar"
"0","kkn <- kknn(Spam~.,data,newdata,k=1)"
"0","probability <- kkn$fitted.values"
"0","Y_pred <- ifelse(probability > 0.5,1,0)"
"0","col_num <- ncol(data)"
"0","# Confusion matrix"
"0","c_mat <- table(data[,col_num],Y_pred)"
"0","# misclassification rate"
"0","mis_class <- sum(c_mat[row(c_mat) != col(c_mat)])/ sum(c_mat)"
"0","# The mis-classification rate obtained from calculated kkn is 0.4788321 "
"0","# and that by using kknn package is 0.470073 which is almost similar"
"0","# Assignment 1 part 6"
"0","kkn <- kknn(Spam~.,data,newdata,k=5)"
"0","kkn_probability <- kkn$fitted.values"
"0","knearest_prob <- knearest(data,5,newdata)"
"0","pi_values <- seq(from = 0.05, to = 0.95, by= 0.05)"
"0","###### in order to manually implement sensitivity and specificity "
"0","ROC=function(Y, Yfit, pi_value){"
"0","  m=length(pi_value)"
"0","  TPR=numeric(m)"
"0","  FPR=numeric(m)"
"0","    for(i in 1:m){"
"0","    "
"0","    t=table(Y,Yfit > pi_value[i])"
"0","    "
"0","    N_p <- sum(t[2,])"
"0","    N_n <- sum(t[1,])"
"0","    "
"0","    TPR[i]= t[2,2]/N_p"
"0","    FPR[i]= t[1,2]/N_n"
"0","  }"
"0","   return (list(TPR=TPR,FPR=FPR))"
"0","}"
"0","Y <- data[,ncol(data)]"
"0","knearest_ROC <- ROC(Y,knearest_prob,pi_values)"
"0","kknn_ROC <- ROC(Y,kkn_probability,pi_values)"
"0","plot <- plot(x = knearest_ROC$FPR,y = knearest_ROC$TPR,type = ""l"", main = ""ROC Curve"", xlab = ""FPR"", ylab = ""TPR"")"

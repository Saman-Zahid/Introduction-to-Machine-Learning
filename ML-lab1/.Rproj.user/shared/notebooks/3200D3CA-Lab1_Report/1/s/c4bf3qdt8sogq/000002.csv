"0","#linear regression"
"0","mylin=function(X,Y, Xpred){"
"0","  Xpred1=cbind(1,Xpred)"
"0","  X= cbind(1,X)"
"0","  "
"0","  beta <- solve(t(X) %*% X) %*% (t(X) %*% Y)"
"0","  Res=Xpred1 %*% beta"
"0","  return(Res)"
"0","}"
"0","myCV=function(X,Y,Nfolds){"
"0","  n=length(Y)"
"0","  p=ncol(X)"
"0","  set.seed(12345)"
"0","  ind=sample(n,n)"
"0","  X1=X[ind,]"
"0","  Y1=Y[ind]"
"0","  sF=floor(n/Nfolds)"
"0","  MSE=numeric(2^p-1)"
"0","  Nfeat=numeric(2^p-1)"
"0","  Features=list()"
"0","  curr=0"
"0","  "
"0","  #we assume 5 features."
"0","  "
"0","  for (f1 in 0:1)"
"0","    for (f2 in 0:1)"
"0","      for(f3 in 0:1)"
"0","        for(f4 in 0:1)"
"0","          for(f5 in 0:1){"
"0","            model= c(f1,f2,f3,f4,f5)"
"0","            if (sum(model)==0) next()"
"0","            SSE=0"
"0","            "
"0","            #selecting model"
"0","            curr_model <- which(model == 1)"
"0","            # Generating sequences to select index later"
"0","            lower_seq1 <- seq(1, n, sF)"
"0","            upper_seq2 <- seq(0, n, sF)"
"0","            for (k in 1:Nfolds){"
"0","              i <- lower_seq1[k]"
"0","              j <- upper_seq2[k+1]"
"0","              # Selecting n/kfold indices"
"0","              ind_fold <- ind[i:j]"
"0","              Xtest <- X1[ind_fold,curr_model]"
"0","              Xtrain <- X1[-ind_fold,curr_model]"
"0","              Ytrain <- Y1[-ind_fold]"
"0","              Yp <- Y1[ind_fold]"
"0","              Ypred <- mylin(X = Xtrain,Y = Ytrain,Xpred = Xtest)"
"0","              SSE=SSE+sum((Ypred-Yp)^2)"
"0","            }"
"0","            curr=curr+1"
"0","            MSE[curr]=SSE/n"
"0","            Nfeat[curr]=sum(model)"
"0","            Features[[curr]]=model"
"0","            "
"0","          }"
"0"," CVplot <- plot(Nfeat,MSE, main = "" MSE Vs NFeatures"", type = ""p"", xlab = ""Number of features"","
"0","       ylab = ""MSE"", pch=19,cex=1)"
"0"," "
"0","  i=which.min(MSE)"
"0","  return(list(CV=MSE[i], Features=Features[[i]]))"
"0","  "
"0","}"
"0","myCV(as.matrix(swiss[,2:6]), swiss[[1]], 5)"
"1","$CV
"
"1","[1]"
"1"," 61.66766"
"1","
"
"1","
"
"1","$Features
"
"1","[1]"
"1"," 1"
"1"," 0"
"1"," 1"
"1"," 1"
"1"," 1"
"1","
"
"1","
"
